worker_processes  auto;

user root;

events {
    worker_connections  1024;
}

# http 모듈
http {

    server {
        listen 8080;

        root /tmp;

        # 8080 포트에서 hls 재생
        location /hls {
            types {
                 application/vnd.apple.mpegurl m3u8;
                 video/mp2t ts;
            }
        }
    }
}

# rmtp 모듈
rtmp {
    server {
    	# rtmp 는 기본적으로 1935 포트를 사용한다.
        listen 1935;
        chunk_size 4096; # 청크 사이즈

		# app 이름 live
        application live {

            live on;

			# 들어온 rtmp 데이터를 ffmpeg를 이용해서 hls로 인코딩
            # 화질별로 인코딩 $app은 app 이름 $name은 식별자(채널 같은 의미)
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1
                             -c:v libx264 -c:a aac -b:v 256k  -b:a 64k  -vf "scale=480:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_low
                             -c:v libx264 -c:a aac -b:v 768k  -b:a 128k -vf "scale=720:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_mid
                             -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=960:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_high
                             -c:v libx264 -c:a aac -b:v 6000k -r 60  -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/hls/$name_hd720
                             -c copy -f flv rtmp://localhost:1935/hls/$name_src;

            drop_idle_publisher 10s;
        }

		# hls 파일로 저장~
        application hls {
            live on;
            hls on;
            hls_fragment 10s;
            hls_playlist_length 10;
            hls_path /tmp/hls; # 파일 위치

            hls_variant _src BANDWIDTH=4096000;
            hls_variant _hd720 BANDWIDTH=2048000;
            hls_variant _high BANDWIDTH=1152000;
            hls_variant _mid BANDWIDTH=448000;
            hls_variant _low BANDWIDTH=288000;
        }
    }
}